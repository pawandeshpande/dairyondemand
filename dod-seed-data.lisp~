(in-package :dairyondemand)
(clsql:file-enable-sql-reader-syntax)

					;**********Get the company***********
(defparameter dod-company (select-company-by-name "%demo"))

;;;;;;;;;;;;;;;;;;; CREATE SOME PRODUCT CATEGORIES ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defparameter *product-categories* nil) 
(setf *product-categories* (list "Milk & Dairy Products" "Milk and Dairy Products." "resources/milkdairy.png" dod-company))
(apply #'create-prdcatg *product-categories*)

(setf *product-categories* nil) 
(setf *product-categories* (list "Other items" "Other items." "resources/otheritems.png" dod-company))
(apply #'create-prdcatg *product-categories*)


(setf *product-categories* nil) 
(setf *product-categories* (list "Newspapers & Magazines" "Newspapers & Magazines." "resources/newspapers&magazines.png" dod-company))
(apply #'create-prdcatg *product-categories*)


;******Create the customer ******
(defparameter *customer-params* nil)
;******Create a customer for demo company, with fixed phone number *******
(setf *customer-params* (list (format nil "cust~a" (random 200)) "GA Bangalore 560066" "9999999999" dod-company))
;Create the customer now.
(apply #'create-customer *customer-params*)

(loop for i from 1 to 10 do 
(setf *customer-params* (list (format nil "cust~a" (random 200)) "GA Bangalore 560066" (format nil "99999~a" (random 99999)) dod-company))
;Create the customer now.
(apply #'create-customer *customer-params*))

;Get the customer which we have created in the above steps. 
(defparameter Testcustomer1 (select-customer-by-name (car *customer-params*) dod-company))

; **** Create the vendor *****
(defparameter *vendor-params* nil)
(loop for i from 1 to 10 do 
(setf *vendor-params* (list (format nil "Vendor~a" (random 20)) "GA Bangalore 560066" (format nil "98456~a" (random 99999)) dod-company))
;Create the vendor now.
(apply #'create-vendor *vendor-params*))
;Get the vendor which we have created in the above steps. 
(defparameter Rajesh(select-vendor-by-name (car *vendor-params*) dod-company))
(defparameter Suresh(select-vendor-by-name (car *vendor-params*) dod-company))

(defparameter MilkCatg (select-prdcatg-by-name "%Milk & Dairy Products%" dod-company))
(defparameter NewspapersCatg (select-prdcatg-by-name "%Newspaper%" dod-company))
(defparameter OtherCatg (select-prdcatg-by-name "%Other items%" dod-company))


(defparameter NandiniBlue (list (format nil "Nandini Homogenised milk (Blue packet)") Rajesh MilkCatg "500 ml" 18.50 "resources/nandini-blue.png" "Y" dod-company))
(apply #'create-product NandiniBlue)
(defparameter NandiniPurple (list (format nil "Nandini Sumrudhi (Purple packet)") Rajesh MilkCatg "500 ml" 18.50 "resources/nandini-purple.png" "Y" dod-company))
(apply #'create-product NandiniPurple) 
(defparameter NandiniSTM (list (format nil "Nandini Special Toned Milk") Rajesh MilkCatg "500 ml" 18.50 "resources/nandini-STM.png" "Y"  dod-company))
(apply #'create-product NandiniSTM) 
(defparameter NandiniYellow (list (format nil "Nandini Double Toned Milk (Yellow packet)") Rajesh MilkCatg  "500 ml" 46.00 "resources/nandini-yellow.png" "Y"  dod-company))
(apply #'create-product NandiniYellow)
 
(defparameter TOI (list (format nil "Times Of India") Suresh  NewspapersCatg  "1 Nos" 5.00 "resources/timesofindia.png" "Y"  dod-company))
(apply #'create-product TOI)

(defparameter DeccanHerald (list (format nil "Deccan Herald") Suresh  NewspapersCatg  "1 Nos" 5.00 "resources/deccanherald.png" "Y"  dod-company))
(apply #'create-product DeccanHerald)

(defparameter TheHindu (list (format nil "The Hindu") Suresh  NewspapersCatg  "1 Nos" 5.00 "resources/thehindu.png" "Y"  dod-company))
(apply #'create-product TheHindu)

(defparameter IndianExpress (list (format nil "Indian Express") Suresh  NewspapersCatg  "1 Nos" 5.00 "resources/indianexpress.png" "Y"  dod-company))
(apply #'create-product IndianExpress)

(defparameter VijayKarnataka (list (format nil "Vijay Karnataka") Suresh  NewspapersCatg  "1 Nos" 5.00 "resources/vijaykarnataka.png" "Y"  dod-company))
(apply #'create-product VijayKarnataka)

(defparameter PrajaVani (list (format nil "Praja Vani") Suresh  NewspapersCatg  "1 Nos" 5.00 "resources/prajavani.png" "Y"  dod-company))
(apply #'create-product PrajaVani)






(defparameter *product-params* nil)
(defparameter *unitprice* nil) 
(loop for i from 1 to 10 do 
(setf *unitprice* (random 500.00)) 
(setf *product-params* (list (format nil "Test Product ~a" (random 200)) Rajesh OtherCatg "1 KG" *unitprice*  "resources/test-product.png" nil dod-company))
;Create the customer now.
(apply #'create-product *product-params*))

;Get the customer which we have created in the above steps. 
(defparameter Testproduct (select-product-by-name (car *product-params*) dod-company ))




 


